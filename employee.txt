// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract EmployeeManager {
    // Employee structure
    struct Employee {
        uint256 id;
        string name;
        uint256 salary;
        uint256 joiningDate; // Timestamp
    }

    // Store employees
    Employee[] public employees;

    // Add an employee
    function addEmployee(uint256 _id, string memory _name, uint256 _salary, uint256 _joiningDate) public {
        employees.push(Employee(_id, _name, _salary, _joiningDate));
    }

    // Get employee details by index
    function getEmployee(uint256 index) public view returns (uint256, string memory, uint256, uint256) {
        require(index < employees.length, "Invalid index");
        Employee memory emp = employees[index];
        return (emp.id, emp.name, emp.salary, emp.joiningDate);
    }

    // Get total employees count
    function countEmployees() public view returns (uint256) {
        return employees.length;
    }
}